<?php
/**
 * fdvegan.module
 *
 * Module implementation for fdvegan.
 * Main module implementation for finding the 5DV link between 2 given actors.
 * Creates some initial static content, sets permissions, displays the main pages' content.
 *
 * PHP version 5.6
 *
 * @category   Admin
 * @package    fdvegan
 * @author     Rob Howe <rob@robhowe.com>
 * @copyright  2015-2016 Rob Howe
 * @license    This file is proprietary and subject to the terms defined in file LICENSE.txt
 * @version    Bitbucket via git: $Id$
 * @link       http://fivedegreevegan.aprojects.org
 * @since      version 0.1
 * @see        fdvegan.module
 */


    module_load_include('php', 'fdvegan', 'fdvegan_blocks');  // Include file fdvegan_blocks.php


    /**
     * Implementation of hook_permission().
     */
    function fdvegan_permission() {
        return array(
            'administer fdvegan' => array(
                'title' => t('Administer FDVegan'),
                'description' => t('Perform administration tasks for FDVegan.'),
                'restrict access' => TRUE,  // Only let admins access this page
                'warning' => 'Warning: Give to trusted Content Admin roles only.',
            ),
            'pro fdvegan' => array(
                'title' => t('Pro FDVegan'),
                'description' => t('Use FDVegan, plus "Pro" functionality.'),
            ),
            'view fdvegan' => array(
                'title' => t('View FDVegan'),
                'description' => t('View the minimal "Apply for Access" FDVegan pages.'),
            ),
        );
    }


    /**
     * Implementation of hook_enable().
     */
    function fdvegan_enable() {

        fdvegan_Util::installVariables();  // setup all needed "fdvegan_*" variable_set()'s

        // Create a new role (if it does not exist already):
        $newRoles = array('fdvegan pro');
        foreach ($newRoles as $r) {
            if (!user_role_load_by_name($r)) {
                $role = new stdClass();
                $role->name = $r;
                user_role_save($role);
                $testRole = user_role_load_by_name($r);  // Verify it.
                if ($testRole === FALSE) {
                    $msg = "Could not create role \"{$r}\".";
                    drupal_set_message($msg, 'error');
                }
            }
        }

        // Just to make things easier for the admin, 
        // we auto-enable the proper permissions here.
        // They can, of course, be changed manually by an admin later.

        $pro_fdvegan_role = user_role_load_by_name('fdvegan pro');
        user_role_change_permissions($pro_fdvegan_role->rid, array(
            'pro fdvegan'     => TRUE,
            'use fdvegan'     => TRUE,
            'view fdvegan'    => TRUE,
            'access content'  => TRUE,
            'search content'  => TRUE,
            'vote on polls'   => TRUE,
            'access comments' => TRUE,
            'post comments'   => TRUE,
            'use text format filtered_html' => TRUE,
            'skip CAPTCHA'    => TRUE,
            'access site-wide contact form' => TRUE,
        ));

        $authenticated_role = user_role_load_by_name('authenticated user');
        user_role_change_permissions($authenticated_role->rid, array(
            'use fdvegan'     => TRUE,
            'view fdvegan'    => TRUE,
            'access content'  => TRUE,
            'access comments' => TRUE,
            'access site-wide contact form' => TRUE,
        ));

        $anonymous_role = user_role_load_by_name('anonymous user');
        user_role_change_permissions($anonymous_role->rid, array(
            'view fdvegan'    => TRUE,
            'access content'  => TRUE,
            'access comments' => TRUE,
            'access site-wide contact form' => TRUE,
        ));
    }

    /**
     * Implementation of hook_disable().
     */
    function fdvegan_disable() {
        fdvegan_Util::uninstallVariables();  // remove all installed "fdvegan_*" variable_set()'s
    }


    /**
     * Implementation of hook_menu().
     */
    function fdvegan_menu(){
        $items = array();

        //
        // Main menu links:
        //

        $items['actor-list'] = array(
            'title'            => 'All Actors',
            'description'      => 'List of all vegan actors',
            'type'             => MENU_NORMAL_ITEM,
            'menu_name'        => 'main-menu',
            'access arguments' => array('use fdvegan'),
            'page callback'    => 'fdvegan_actor_list',
            'weight'           => 10,
        );
        $items['actor'] = array(
            'title'            => 'Actor Search',
            'description'      => 'Find your fave actors',
            'type'             => MENU_NORMAL_ITEM,
            'menu_name'        => 'main-menu',
            'access arguments' => array('use fdvegan'),
            'page callback'    => 'drupal_get_form',
            'page arguments'   => array('fdvegan_actor_form'),
            'weight'           => 12,
        );

        //
        // Admin links:
        //

        // For "Admin->Configure" page:
        $items['admin/config/fdvegan'] = array(
            'title'            => 'Five Degrees of Vegan',
            'description'      => 'Five Degrees of Vegan - Admin Page',
            'type'             => MENU_NORMAL_ITEM,
            'access arguments' => array('administer fdvegan settings'),
            'page callback'    => 'drupal_get_form',
            'page arguments'   => array('fdvegan_admin_form'),
            'weight'           => 50,
            'position'         => 'right',
            'file'             => 'fdvegan.admin.php',
        );
        // For "Admin->Modules" page "Configure" gear-link:
        $items['admin/config/fdvegan/settings'] = array(  // Matches setting in file: fdvegan.info
            'title'            => 'Five Degrees of Vegan',
            'description'      => 'Five Degrees of Vegan - Admin Page',
            'type'             => MENU_NORMAL_ITEM,
            'access arguments' => array('administer fdvegan settings'),
            'page callback'    => 'drupal_get_form',
            'page arguments'   => array('fdvegan_admin_form'),
            'weight'           => 100,
            'file'             => 'fdvegan.admin.php',
        );

        //
        // Hidden (non-menu) pages:
        //

        $items['init-load'] = array(
            'title'            => 'Initial Load',
            'description'      => 'Five Degrees of Vegan - Admin - Initial Load',
            'type'             => MENU_CALLBACK,
            'access arguments' => array('administer fdvegan'),
            'page callback'    => 'drupal_get_form',
            'page arguments'   => array('fdvegan_init_load_form'),
            'weight'           => 102,
        );


        // other menu-creation code snipped...


        return $items;
    }


    /**
     * Display output for "Actor List"
     *
     * Display a list of all actors in our database.
     */
    function fdvegan_actor_list() {
        return fdvegan_Content::getAllActorsContent();
    }


    /**
     * Implementation of hook_form() for fdvegan_actor_form().
     *
     * Find actor by actor's name, then display output.
     *  If actor is not in our DB, then load it from TMDb and store in our DB.
     */
    function fdvegan_actor_form($form, &$form_state) {
        $url_params = drupal_get_query_parameters();
        if (is_array($url_params) && array_key_exists('person_id', $url_params)) {
            // Form is being submitted via a URL with params, so process it

            $person_id = $url_params['person_id'];
            $options = array('PersonId' => $person_id);
            $content = fdvegan_Content::getActorContent($options);

            $form['submission'] = array(
                '#markup' => $content,
            );

        } elseif (!empty($form_state['submitted'])) {
            // Form has been successfully submitted, so process it

            $person_id = (int)$form_state['values']['person_id'];
            $options = array('PersonId' => $person_id);
            $content = fdvegan_Content::getActorContent($options);

            $form['submission'] = array(
                '#markup' => $content,
            );

        } else {
            // Display the form

            $persons_collection = new fdvegan_PersonCollection();
            $select_options = $persons_collection->getMinPersonsArray();
            $form['intro'] = array(
                '#markup' => "To find an actor or actress' bio, select their name here.<br>",
                '#weight' => 10,
            );
            $form['person_id'] = array('#type'          => 'select',
                                       '#title'         => t('Actor’s Full Name'),
                                       '#default_value' => !empty($form->full_name) ? $form->full_name : '',
                                       '#required'      => TRUE,
                                       '#weight'        => 20,
                                       '#options'       => $select_options,
                                      );


            // other form-creation code snipped...


            $form['submit'] = array('#type'   => 'submit',
                                    '#value'  => t('Search for Actor'),
                                    '#weight' => 50,
                                   );
        }

        return $form;
    }


    /**
     * Validation handler for fdvegan_actor_form().
     */
    function fdvegan_actor_form_validate($form, &$form_state) {
        if (empty((int)$form_state['values']['person_id'])) {  // no need to validate FullName if a good person_id exists
            if (!is_string($form_state['values']['full_name'])) {
                form_set_error('full_name', t('You must enter a valid person’s name'));
                return FALSE;
            }
            $form_state['values']['full_name'] = trim($form_state['values']['full_name']);
            if (strlen($form_state['values']['full_name']) < 3) {
                form_set_error('full_name', t('Name too short.  You must enter a valid person’s name'));
               return FALSE;
            }
        }
        return TRUE;
    }


    /**
     * Submit handler for the fdvegan_actor form.
     *
     * @see fdvegan_actor_form()
     */
    function fdvegan_actor_form_submit($form, &$form_state) {

        // @TODO - the line below currently works since there's always a select drop-down, but if/when
        //         that changes, we'll need to actually lookup the person_id by FullName here.
        $person_id = $form_state['values']['person_id'];

        // Since drupal forms build twice on submit, we'll reroute this form submit to use URL params instead,
        // so our custom short-circuit code above will save us from rebuilding the entire slow form again on a
        // user's potential future refresh/bookmark, and we'll keep the same nice "/actor" URL.
        $options = array('query' => array('person_id' => $person_id));
        drupal_goto('actor', $options);
    }


    /**
     * Implementation of hook_form() for fdvegan_init_load_form().
     * Admin page for "Init Load"
     *
     * Load all actors and movies from the TMDb API and store in our DB.
     *
     *  Note - the actor must already have a minimal record in our DB for
     *         anything to process (see fdvegan_actor_load_new())
     */
    function fdvegan_init_load_form($form, &$form_state) {

        $url_params = drupal_get_query_parameters();
        if (is_array($url_params) && !empty($form_state['values']['init_all'])) {
            // Form is being submitted via a URL with params, so process it

            $all_actors_link = l(t('all known vegan actors'),
                                 'actor-list'
                                );
            $content = 'Database initialization process complete.<br /><br />' .
                       'You may now view '. $all_actors_link .' and movies.';

            $form['complete'] = array('#markup' => $content);

        } else {
            // Display the form

            $form['intro'] = array(
                '#markup' => "This is an Admin page where you can initially load all data for the existing actors in the database.<br /><br />This process <strong>takes about 45 minutes to complete</strong>.<br />Do not navigate away from the webpage or else you will have to restart this process again.<br /><br />This batch process is safe to re-run multiple times, although it should not be necessary to unless you expect there is new data on TMDb that you would like to extract.<br /><br />",
            );
            $form['init_all'] = array('#type'  => 'hidden',
                                      '#value' => '1',
                                     );
            $form['submit'] = array('#type'  => 'submit',
                                    '#value' => t('Reload all Actors and Movies from TMDb'),
                                   );
        }

        return $form;
    }


    /**
     * Submit handler for the fdvegan_init_load form.
     *
     * @see fdvegan_init_load_form()
     */
    function fdvegan_init_load_form_submit($form, &$form_state) {
        $form_state['rebuild'] = TRUE;

        // Need to clear any existing cached movie data.  See fdvegan_MovieCollection::fdvegan_min_movies_array()
        variable_set('fdvegan_min_movies_array', array());  // Clear any existing cached movie data.

        module_load_include('php', 'fdvegan', 'fdvegan_batch_process');
        fdvegan_init_load_batch();
    }


    // other hook-creation code snipped...

